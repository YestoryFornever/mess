前端模块化
设计模式
css position float display
变量提前
闭包
Node相关
React/Redux相关

#前端模块化相关#
	1. amd，cmd是什么；
	模块化思想
	amd: require	提前执行	依赖前置
	cmd: import		延迟执行	依赖就近

	2. 请解释什么是Javascript的模块模式，并举出实用实例。
		js模块化mvc（数据层、表现层、控制层）
		seajs
		命名空间

	3* requireJS的核心原理是什么？（如何动态加载的？如何避免多次加载的？如何 缓存的？）

#MVX相关#
	1. mvc，mvp，mvvm等怎么区分，以及应用场景；

#打包相关#
	1. 再来谈谈前端工程化打包工具，gunt，webpack啥的会用么，会写插件么；

#开发环境相关#
	1. 都使用和了解过哪些编辑器？都使用和了解过哪些日常工具？
	2. 你用的得心应手用的熟练地编辑器&开发环境是什么样子？
	Sublime Text 3 + 相关插件编写前端代码
	Google chrome 、Mozilla Firefox浏览器 +firebug 兼容测试和预览页面UI、动画效果和交互功能
	Node.js+Gulp
	git 用于版本控制和Code Review

#人#
	1. 国内外的js牛人都知道哪些？

#性能&优化#
	1. 前端优化的知识都知道哪些？
	2. 你如何对网站的文件和资源进行优化？
	15. 请说出三种减低页面加载时间的方法
		1、压缩css、js文件
		2、合并js、css文件，减少http请求
		3、外部js、css文件放在最底下
		4、减少dom操作，尽可能用变量替代不必要的dom操作

	20. 你如何优化自己的代码？
		代码重用
		避免全局变量（命名空间，封闭空间，模块化mvc..）
		拆分函数避免函数过于臃肿
		注释

	39. 99%的网站都需要被重构是那本书上写的？
		网站重构：应用web标准进行设计（第2版）

	12. 你能描述一下渐进增强和优雅降级之间的不同吗?

	40. 什么叫优雅降级和渐进增强？
		优雅降级：Web站点在所有新式浏览器中都能正常工作，如果用户使用的是老式浏览器，则代码会针对旧版本的IE进行降级处理了,使之在旧式浏览器上以某种形式降级体验却不至于完全不能用。
		如：border-shadow
	
		渐进增强：从被所有浏览器支持的基本功能开始，逐步地添加那些只有新版本浏览器才支持的功能,向页面增加不影响基础浏览器的额外样式和功能的。当浏览器支持时，它们会自动地呈现出来并发挥作用。
		如：默认使用flash上传，但如果浏览器支持 HTML5 的文件上传功能，则使用HTML5实现更好的体验；

		43. 你有用过哪些前端性能优化的方法？
		如何编写高性能的Javascript？
		部分地区用户反应网站很卡，请问有哪些可能性的原因，以及解决方法？
		从打开app到刷新出内容，整个过程中都发生了什么，如果感觉慢，怎么定位问题，怎么解决?
	
		（1） 减少http请求次数：CSS Sprites, JS、CSS源码压缩、图片大小控制合适；网页Gzip，CDN托管，data缓存 ，图片服务器。
	
		（2） 前端模板 JS+数据，减少由于HTML标签导致的带宽浪费，前端用变量保存AJAX请求结果，每次操作本地变量，不用请求，减少请求次数
	
		（3） 用innerHTML代替DOM操作，减少DOM操作次数，优化javascript性能。
	
		（4） 当需要设置的样式很多时设置className而不是直接操作style。
	
		（5） 少用全局变量、缓存DOM节点查找的结果。减少IO读取操作。
	
		（6） 避免使用CSS Expression（css表达式)又称Dynamic properties(动态属性)。
	
		（7） 图片预加载，将样式表放在顶部，将脚本放在底部加上时间戳。
	
		（8） 避免在页面的主体布局中使用table，table要等其中的内容完全下载之后才会显示出来，显示比div+css布局慢。
		对普通的网站有一个统一的思路，就是尽量向前端优化、减少数据库操作、减少磁盘IO。向前端优化指的是，在不影响功能和体验的情况下，能在浏览器执行的不要在服务端执行，能在缓存服务器上直接返回的不要到应用服务器，程序能直接取得的结果不要到外部取得，本机内能取得的数据不要到远程取，内存能取到的不要到磁盘取，缓存中有的不要去数据库查询。减少数据库操作指减少更新次数、缓存结果减少查询次数、将数据库执行的操作尽可能的让你的程序完成（例如join查询），减少磁盘IO指尽量不使用文件系统作为缓存、减少读写文件次数等。程序优化永远要优化慢的部分，换语言是无法“优化”的。
	

#算法#
	1. 基础算法题(如快读排序，能否一两句说说重要的核心原理或者数组消重)

#重构#
	10. 是否有接触或了解过重构
	37. 页面重构怎么操作？
		网站重构：在不改变外部行为的前提下，简化结构、添加可读性，而在网站前端保持一致的行为。
		也就是说是在不改变UI的情况下，对网站进行优化，在扩展的同时保持一致的UI。

		对于传统的网站来说重构通常是：

		表格(table)布局改为DIV+CSS
		使网站前端兼容于现代浏览器(针对于不合规范的CSS、如对IE6有效的)
		对于移动平台的优化
		针对于SEO进行优化
		深层次的网站重构应该考虑的方面

		减少代码间的耦合
		让代码保持弹性
		严格按规范编写代码
		设计可扩展的API
		代替旧有的框架、语言(如VB)
		增强用户体验
		通常来说对于速度的优化也包含在重构中

		压缩JS、CSS、image等前端资源(通常是由服务器来解决)
		程序的性能优化(如数据读写)
		采用CDN来加速资源加载
		对于JS DOM的优化
		HTTP服务器的文件缓存

#设计模式#
	1. 设计模式 知道什么是singleton, factory, strategy, decrator么?

#加密#
	41. 是否了解公钥加密和私钥加密。
	一般情况下是指私钥用于对数据进行签名，公钥用于对签名进行验证;
	HTTP网站在浏览器端用公钥加密敏感数据，然后在服务器端再用私钥解密。
	14. 为什么利用多个域名来存储网站资源会更有效？
	//确保用户在不同地区能用最快的速度打开网站，其中某个域名崩溃用户也能通过其他域名访问网站

#后台推送#
	42. WEB应用从服务器主动推送Data到客户端有那些方式？
		html5提供的Websocket
		不可见的iframe
		WebSocket通过Flash
		XHR长时间连接
		XHR Multipart Streaming
		script标签 的长时间连接(可跨域)

#hybrid#
	4. 说说hybrid和h5的优缺点；
		h5是网页，依赖浏览器，兼容浏览器
		hybrid是app，兼容系统

	49 你怎么看待Web App 、hybrid App、Native App？

17. 哈希表
//具有散列（映射）特性的数据模型

19.你如何组织自己的代码？是使用模块模式，还是使用经典继承的方法？
	对内：模块模式
	对外：继承

21. useraget.nav

24.	解释一下 Backbone 的 MVC 实现方式？

25.	什么是“前端路由”?什么时候适合使用“前端路由”? “前端路由”有哪些优点和缺点?

26.	知道什么是webkit么? 知道怎么用浏览器的各种工具来调试和debug代码么?

27.	如何测试前端代码么? 知道BDD, TDD, Unit Test么? 知道怎么测试你的前端工程么(mocha, sinon, jasmin, qUnit..)?

28.	前端templating(Mustache, underscore, handlebars)是干嘛的, 怎么用?

29.	简述一下 Handlebars 的基本用法？

30.	简述一下 Handlerbars 的对模板的基本处理流程， 如何编译的？如何缓存的？

31.	检测浏览器版本版本有哪些方式？

33.	原来公司工作流程是怎么样的，如何与其他人协作的？如何夸部门合作的？

34. 你遇到过比较难的技术问题是？你是如何解决的？

46 除了前端以外还了解什么其它技术么？你最最厉害的技能是什么？

48 对前端工程师这个职位是怎么样理解的？它的前景会怎么样？
	前端是最贴近用户的程序员，比后端、数据库、产品经理、运营、安全都近。
	1、实现界面交互
	2、提升用户体验
	3、有了Node.js，前端可以实现服务端的一些事情

	前端是最贴近用户的程序员，前端的能力就是能让产品从 90分进化到 100 分，甚至更好，

	参与项目，快速高质量完成实现效果图，精确到1px；

	与团队成员，UI设计，产品经理的沟通；

	做好的页面结构，页面重构和用户体验；

	处理hack，兼容、写出优美的代码格式；

	针对服务器的优化、拥抱最新前端技术。

50* 你移动端前端开发的理解？（和 Web 前端开发的主要区别是什么？）

51* 你对加班的看法？
	加班就像借钱，原则应当是----救急不救穷
	绝大部分加班都可以通过规范流程去规避

52* 平时如何管理你的项目？
	先期团队必须确定好全局样式（globe.css），编码模式(utf-8) 等；
	编写习惯必须一致（例如都是采用继承式的写法，单样式都写成一行）；
	标注样式编写人，各模块都及时标注（标注关键样式调用的地方）；
	页面进行标注（例如 页面 模块 开始和结束）；
	CSS跟HTML 分文件夹并行存放，命名都得统一（例如style.css）；
	JS 分文件夹存放 命名以该JS功能为准的英文翻译。
	图片采用整合的 images.png png8 格式文件使用 尽量整合在一起使用方便将来的管理

53* 如何设计突发大规模并发架构？

54* 当团队人手不足，把功能代码写完已经需要加班的情况下，你会做前端代码的测试吗？

55* 说说最近最流行的一些东西吧？常去哪些网站？
	ES6\WebAssembly\Node\MVVM\Web Components\React\React Native\Webpack 组件化

56* 知道什么是SEO并且怎么优化么? 知道各种meta data的含义么?

57* 移动端（Android IOS）怎么做好用户体验?
	清晰的视觉纵线、
	信息的分组、极致的减法、
	利用选择代替输入、
	标签及文字的排布方式、
	依靠明文确认密码、
	合理的键盘利用

58* 简单描述一下你做过的移动APP项目研发流程？

59* 你在现在的团队处于什么样的角色，起到了什么明显的作用？

60* 你认为怎样才是全端工程师（Full Stack developer）？

61* 介绍一个你最得意的作品吧？

62* 你有自己的技术博客吗，用了哪些技术？

63* 对前端安全有什么看法？

64* 是否了解Web注入攻击，说下原理，最常见的两种攻击（XSS 和 CSRF）了解到什么程度？

65* 项目中遇到过哪些印象深刻的技术难题，具体是什么问题，怎么解决？。

66* 最近在学什么东西？

67* 你的优点是什么？缺点是什么？

68* 如何管理前端团队?

69* 最近在学什么？能谈谈你未来3，5年给自己的规划吗？

70* 对前端界面工程师这个职位是怎么样理解的？它的前景会怎么样？



72* JS 怎么实现一个类。怎么实例化这个类

73* 解释一下 Backbone 的 MVC 实现方式？

74* 什么是“前端路由”?什么时候适合使用“前端路由”? “前端路由”有哪些优点和缺点?

75* 知道什么是webkit么? 知道怎么用浏览器的各种工具来调试和debug代码么?

76* 如何测试前端代码么? 知道BDD, TDD, Unit Test么? 知道怎么测试你的前端工程么(mocha, sinon, jasmin, qUnit..)?

77* 前端templating(Mustache, underscore, handlebars)是干嘛的, 怎么用?

78* 简述一下 Handlebars 的基本用法？

79* 简述一下 Handlerbars 的对模板的基本处理流程， 如何编译的？如何缓存的？

80* 网页验证码是干嘛的，是为了解决什么安全问题？
	区分用户是计算机还是人的公共全自动程序。可以防止恶意破解密码、刷票、论坛灌水；
	有效防止黑客对某一个特定注册用户用特定程序暴力破解方式进行不断的登陆尝试。
81* 检测浏览器版本版本有哪些方式？
	功能检测、userAgent特征检测

	比如：navigator.userAgent
	//"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_2) AppleWebKit/537.36
	(KHTML, like Gecko) Chrome/41.0.2272.101 Safari/537.36

82* What is a Polyfill?
	polyfill 是“在旧版浏览器上复制标准 API 的 JavaScript 补充”,可以动态地加载 JavaScript 代码或库，在不支持这些标准 API 的浏览器中模拟它们。
	例如，geolocation（地理位置）polyfill 可以在 navigator 对象上添加全局的 geolocation 对象，还能添加 getCurrentPosition 函数以及“坐标”回调对象，
	所有这些都是 W3C 地理位置 API 定义的对象和函数。因为 polyfill 模拟标准 API，所以能够以一种面向所有浏览器未来的方式针对这些 API 进行开发，
	一旦对这些 API 的支持变成绝对大多数，则可以方便地去掉 polyfill，无需做任何额外工作。

83* 做的项目中，有没有用过或自己实现一些 polyfill 方案（兼容性处理方案）？
	比如： html5shiv、Geolocation、Placeholder



86.	移动端的点击事件的有延迟，时间是多久，为什么会有？ 怎么解决这个延时？（click 有 300ms 延迟,为了实现safari的双击事件的设计，浏览器要知道你是不是要双击操作。）    
2. 对BFC规范(块级格式化上下文：block formatting context)的理解？
	（W3C CSS 2.1 规范中的一个概念,它是一个独立容器，决定了元素如何对其内容进行定位,以及与其他元素的关系和相互作用。）
	一个页面是由很多个 Box 组成的,元素的类型和 display 属性,决定了这个 Box 的类型。
	不同类型的 Box,会参与不同的 Formatting Context（决定如何渲染文档的容器）,因此Box内的元素会以不同的方式渲染,也就是说BFC内部的元素和外部的元素不会互相影响。

3. 什么是响应式设计？响应式设计的基本原理是什么？如何兼容低版本的IE？

4. 如果需要手动写动画，你认为最小时间间隔是多久，为什么？（阿里）
	多数显示器默认频率是60Hz，即1秒刷新60次，所以理论上最小间隔为1/60＊1000ms ＝ 16.7ms

5. png、jpg、gif 这些图片格式解释一下，分别什么时候用。有没有了解过webp？